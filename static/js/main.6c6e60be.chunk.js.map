{"version":3,"sources":["User.js","Comment.js","CommentList.js","Post.js","PostList.js","Api.js","App.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","className","name","address","city","href","email","Comment","comment","body","CommentList","comments","map","oneComment","src_Comment","key","id","Post","currentPost","src_User","title","src_CommentList","PostList","posts","post","src_Post","API_URL","delay","Promise","resolve","setTimeout","App","_useState","useState","_useState2","Object","slicedToArray","isLoaded","setLoad","_useState3","_useState4","isLoading","setLoading","_useState5","_useState6","postsData","setPostsData","_useState7","_useState8","searchData","setSearchData","mergeData","users","data","objectSpread2","find","userId","filter","postId","Fragment","type","placeholder","onChange","event","_ref3","inputValue","target","value","trim","toLowerCase","searchValues","_ref4","includes","handleSearch","src_PostList","onClick","_ref2","regenerator_default","async","_context","prev","next","awrap","all","then","fetch","concat","response","ok","json","catch","sent","stop","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6c6e60be.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <div className=\"author\">\n    <p className=\"username\">\n      <b>Name:</b>\n      {' '}\n      {user.name}\n    </p>\n    <address className=\"city\">\n      <b>address:</b>\n      {' '}\n      {user.address.city}\n    </address>\n    <p><b>email:</b></p>\n    <a href=\"{user.email}\" className=\"link\">\n      {user.email}\n    </a>\n  </div>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    address: PropTypes.object,\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ comment }) => (\n  <article>\n    <div className=\"comment\">\n      <p>\n        {comment.body}\n        {' - '}\n      </p>\n      <span className=\"li\">\n        {comment.name}\n        {' - '}\n      </span>\n      <a href=\"{comment.email}\">\n        {comment.email}\n      </a>\n    </div>\n  </article>\n);\n\nComment.propTypes = { comment: PropTypes.objectOf(PropTypes).isRequired };\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from './Comment';\n\nconst CommentList = ({ comments }) => (\n  <ul>\n    {comments.map(\n      oneComment => <Comment comment={oneComment} key={oneComment.id} />\n    )}\n  </ul>\n);\n\nCommentList.propTypes = {\n  comments:\n    PropTypes.arrayOf(PropTypes.object)\n      .isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\nimport CommentList from './CommentList';\n\nconst Post = ({ currentPost }) => (\n  <div className=\"post1\">\n    <p>\n      <b>User:</b>\n      {' '}\n      <User user={currentPost.user} />\n    </p>\n    <h2>\n      <b>Title:</b>\n      {' '}\n      {currentPost.title}\n    </h2>\n    <p>\n      <b>Body:</b>\n      {' '}\n      {currentPost.body}\n    </p>\n    <p>\n      <b>Comments:</b>\n      <CommentList comments={currentPost.comments} />\n    </p>\n  </div>\n);\n\nPost.propTypes = { currentPost: PropTypes.objectOf(PropTypes).isRequired };\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Post from './Post';\n\nconst PostList = ({ posts }) => (\n  posts.map(post => (\n    <section className=\"post_list\">\n      <Post currentPost={post} key={post.id} />\n    </section>\n  ))\n);\n\nPostList.propTypes = { posts: PropTypes.arrayOf(PropTypes.object).isRequired };\n\nexport default PostList;\n","const API_URL = 'https://jsonplaceholder.typicode.com';\nconst delay = () => new Promise((resolve) => {\n  setTimeout(resolve, 500);\n});\n\nexport const getPosts = () => delay()\n  .then(() => fetch(`${API_URL}/posts`))\n  .then(response => (response.ok ? response.json() : []))\n  .catch(() => []);\n\nexport const getUsers = () => delay()\n  .then(() => fetch(`${API_URL}/users`))\n  .then(response => (response.ok ? response.json() : []))\n  .catch(() => []);\n\nexport const getComments = () => delay()\n  .then(() => fetch(`${API_URL}/comments`))\n  .then(response => (response.ok ? response.json() : []))\n  .catch(() => []);\n","import React, { useState } from 'react';\nimport './App.css';\nimport PostList from './PostList';\nimport { getComments, getPosts, getUsers } from './Api';\n\nconst App = () => {\n  const [isLoaded, setLoad] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [postsData, setPostsData] = useState([]);\n  const [searchData, setSearchData] = useState([]);\n\n  const mergeData = (posts, users, comments) => {\n    const data = posts.map(post => ({\n      ...post,\n      user: users.find(user => user.id === post.userId),\n      comments: comments.filter(comment => comment.postId === post.id),\n    }));\n\n    setPostsData(data);\n    setSearchData(data);\n  };\n\n  const loadData = async() => {\n    setLoading(true);\n    const [posts, users, comments] = await Promise.all(\n      [getPosts(), getUsers(), getComments()]\n    );\n\n    mergeData(posts, users, comments);\n    setLoading(false);\n    setLoad(true);\n  };\n\n  const handleSearch = ({ target }) => {\n    const inputValue = target.value.trim().toLowerCase();\n\n    const searchValues = postsData.filter(\n      ({ title, body }) => (title + body).toLowerCase().includes(inputValue)\n    );\n\n    setSearchData(searchValues);\n  };\n\n  if (isLoading) {\n    return <p className=\"loading\">Loading...</p>;\n  }\n\n  return (\n    <div className=\"App\">\n      {isLoaded\n        ? (\n          <>\n            <input\n              type=\"text\"\n              placeholder=\"write something to search\"\n              className=\"posts_search\"\n              onChange={event => handleSearch(event)}\n            />\n            <PostList posts={searchData} />\n          </>\n        )\n        : (\n          <button\n            type=\"button\"\n            className=\"posts_button\"\n            onClick={loadData}\n          >\n            Load\n          </button>\n        )\n      }\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}